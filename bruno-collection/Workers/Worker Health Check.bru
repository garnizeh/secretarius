meta {
  name: Worker Health Check
  type: http
  seq: 2
}

get {
  url: {{base_url}}/v1/workers/health
  body: none
  auth: inherit
}

headers {
  Content-Type: application/json
  Authorization: Bearer {{access_token}}
}

tests {
  test("Status should be 200", function() {
    expect(res.getStatus()).to.equal(200);
  });

  test("Should return health status", function() {
    expect(res.getBody()).to.have.property('status');
    expect(res.getBody()).to.have.property('active_workers');
    expect(res.getBody()).to.have.property('timestamp');
    expect(res.getBody()).to.have.property('workers');
  });

  test("Status should be healthy or warning", function() {
    const status = res.getBody().status;
    expect(['healthy', 'warning']).to.include(status);
  });

  test("Active workers should be a number", function() {
    expect(res.getBody().active_workers).to.be.a('number');
  });
}
