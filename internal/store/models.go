// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package store

import (
	"net/netip"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type DailyActivityPattern struct {
	UserID        uuid.UUID      `db:"user_id" json:"user_id"`
	ActivityDate  pgtype.Date    `db:"activity_date" json:"activity_date"`
	DayOfWeek     pgtype.Numeric `db:"day_of_week" json:"day_of_week"`
	HourOfDay     pgtype.Numeric `db:"hour_of_day" json:"hour_of_day"`
	EntryCount    int64          `db:"entry_count" json:"entry_count"`
	TotalMinutes  int64          `db:"total_minutes" json:"total_minutes"`
	AvgDuration   float64        `db:"avg_duration" json:"avg_duration"`
	ActivityTypes []byte         `db:"activity_types" json:"activity_types"`
	AvgValueScore float64        `db:"avg_value_score" json:"avg_value_score"`
}

type GeneratedInsight struct {
	ID                   uuid.UUID          `db:"id" json:"id"`
	UserID               uuid.UUID          `db:"user_id" json:"user_id"`
	ReportType           string             `db:"report_type" json:"report_type"`
	PeriodStart          pgtype.Date        `db:"period_start" json:"period_start"`
	PeriodEnd            pgtype.Date        `db:"period_end" json:"period_end"`
	Title                string             `db:"title" json:"title"`
	Content              string             `db:"content" json:"content"`
	Summary              pgtype.Text        `db:"summary" json:"summary"`
	Metadata             []byte             `db:"metadata" json:"metadata"`
	GenerationModel      pgtype.Text        `db:"generation_model" json:"generation_model"`
	GenerationDurationMs pgtype.Int4        `db:"generation_duration_ms" json:"generation_duration_ms"`
	QualityScore         pgtype.Numeric     `db:"quality_score" json:"quality_score"`
	Status               pgtype.Text        `db:"status" json:"status"`
	CreatedAt            pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt            pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type LogEntry struct {
	ID              uuid.UUID          `db:"id" json:"id"`
	UserID          uuid.UUID          `db:"user_id" json:"user_id"`
	ProjectID       pgtype.UUID        `db:"project_id" json:"project_id"`
	Title           string             `db:"title" json:"title"`
	Description     pgtype.Text        `db:"description" json:"description"`
	Type            string             `db:"type" json:"type"`
	StartTime       pgtype.Timestamptz `db:"start_time" json:"start_time"`
	EndTime         pgtype.Timestamptz `db:"end_time" json:"end_time"`
	DurationMinutes pgtype.Int4        `db:"duration_minutes" json:"duration_minutes"`
	ValueRating     string             `db:"value_rating" json:"value_rating"`
	ImpactLevel     string             `db:"impact_level" json:"impact_level"`
	CreatedAt       pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt       pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type LogEntryTag struct {
	LogEntryID uuid.UUID          `db:"log_entry_id" json:"log_entry_id"`
	TagID      uuid.UUID          `db:"tag_id" json:"tag_id"`
	CreatedAt  pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Project struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Description pgtype.Text        `db:"description" json:"description"`
	Color       pgtype.Text        `db:"color" json:"color"`
	Status      pgtype.Text        `db:"status" json:"status"`
	StartDate   pgtype.Date        `db:"start_date" json:"start_date"`
	EndDate     pgtype.Date        `db:"end_date" json:"end_date"`
	CreatedBy   uuid.UUID          `db:"created_by" json:"created_by"`
	IsDefault   pgtype.Bool        `db:"is_default" json:"is_default"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type ProjectPerformanceMetric struct {
	ProjectID          uuid.UUID          `db:"project_id" json:"project_id"`
	ProjectName        string             `db:"project_name" json:"project_name"`
	ProjectStatus      pgtype.Text        `db:"project_status" json:"project_status"`
	ProjectOwner       uuid.UUID          `db:"project_owner" json:"project_owner"`
	TotalEntries       int64              `db:"total_entries" json:"total_entries"`
	TotalMinutes       int64              `db:"total_minutes" json:"total_minutes"`
	AvgEntryDuration   float64            `db:"avg_entry_duration" json:"avg_entry_duration"`
	ContributorsCount  int64              `db:"contributors_count" json:"contributors_count"`
	ActiveDays         int64              `db:"active_days" json:"active_days"`
	FirstActivity      interface{}        `db:"first_activity" json:"first_activity"`
	LastActivity       interface{}        `db:"last_activity" json:"last_activity"`
	AvgValueScore      pgtype.Numeric     `db:"avg_value_score" json:"avg_value_score"`
	MostCommonActivity interface{}        `db:"most_common_activity" json:"most_common_activity"`
	RecentEntries30d   int64              `db:"recent_entries_30d" json:"recent_entries_30d"`
	ProjectCreatedAt   pgtype.Timestamptz `db:"project_created_at" json:"project_created_at"`
}

type RefreshTokenDenylist struct {
	Jti          string             `db:"jti" json:"jti"`
	UserID       uuid.UUID          `db:"user_id" json:"user_id"`
	ExpiresAt    pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
	DenylistedAt pgtype.Timestamptz `db:"denylisted_at" json:"denylisted_at"`
	Reason       pgtype.Text        `db:"reason" json:"reason"`
}

type ScheduledDeletion struct {
	ID           uuid.UUID          `db:"id" json:"id"`
	UserID       uuid.UUID          `db:"user_id" json:"user_id"`
	ScheduledAt  pgtype.Timestamptz `db:"scheduled_at" json:"scheduled_at"`
	DeletionType string             `db:"deletion_type" json:"deletion_type"`
	Status       pgtype.Text        `db:"status" json:"status"`
	CompletedAt  pgtype.Timestamptz `db:"completed_at" json:"completed_at"`
	Metadata     []byte             `db:"metadata" json:"metadata"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Tag struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Color       pgtype.Text        `db:"color" json:"color"`
	Description pgtype.Text        `db:"description" json:"description"`
	UsageCount  pgtype.Int4        `db:"usage_count" json:"usage_count"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Task struct {
	ID                   uuid.UUID          `db:"id" json:"id"`
	TaskType             string             `db:"task_type" json:"task_type"`
	UserID               pgtype.UUID        `db:"user_id" json:"user_id"`
	Payload              []byte             `db:"payload" json:"payload"`
	Status               pgtype.Text        `db:"status" json:"status"`
	Priority             pgtype.Int4        `db:"priority" json:"priority"`
	MaxRetries           pgtype.Int4        `db:"max_retries" json:"max_retries"`
	RetryCount           pgtype.Int4        `db:"retry_count" json:"retry_count"`
	ScheduledAt          pgtype.Timestamptz `db:"scheduled_at" json:"scheduled_at"`
	StartedAt            pgtype.Timestamptz `db:"started_at" json:"started_at"`
	CompletedAt          pgtype.Timestamptz `db:"completed_at" json:"completed_at"`
	Result               []byte             `db:"result" json:"result"`
	ErrorMessage         pgtype.Text        `db:"error_message" json:"error_message"`
	ProcessingDurationMs pgtype.Int4        `db:"processing_duration_ms" json:"processing_duration_ms"`
	CreatedAt            pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt            pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type User struct {
	ID           uuid.UUID          `db:"id" json:"id"`
	Email        string             `db:"email" json:"email"`
	PasswordHash string             `db:"password_hash" json:"password_hash"`
	FirstName    string             `db:"first_name" json:"first_name"`
	LastName     string             `db:"last_name" json:"last_name"`
	Timezone     pgtype.Text        `db:"timezone" json:"timezone"`
	Preferences  []byte             `db:"preferences" json:"preferences"`
	LastLoginAt  pgtype.Timestamptz `db:"last_login_at" json:"last_login_at"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt    pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type UserActivitySummary struct {
	UserID                  uuid.UUID   `db:"user_id" json:"user_id"`
	Email                   string      `db:"email" json:"email"`
	Timezone                pgtype.Text `db:"timezone" json:"timezone"`
	TotalEntries            int64       `db:"total_entries" json:"total_entries"`
	TotalMinutes            int64       `db:"total_minutes" json:"total_minutes"`
	AvgDurationMinutes      float64     `db:"avg_duration_minutes" json:"avg_duration_minutes"`
	ProjectsCount           int64       `db:"projects_count" json:"projects_count"`
	ActiveDays              int64       `db:"active_days" json:"active_days"`
	FirstEntryDate          interface{} `db:"first_entry_date" json:"first_entry_date"`
	LastEntryDate           interface{} `db:"last_entry_date" json:"last_entry_date"`
	CriticalEntries         int64       `db:"critical_entries" json:"critical_entries"`
	HighEntries             int64       `db:"high_entries" json:"high_entries"`
	MediumEntries           int64       `db:"medium_entries" json:"medium_entries"`
	LowEntries              int64       `db:"low_entries" json:"low_entries"`
	CompanyImpactEntries    int64       `db:"company_impact_entries" json:"company_impact_entries"`
	DepartmentImpactEntries int64       `db:"department_impact_entries" json:"department_impact_entries"`
	TeamImpactEntries       int64       `db:"team_impact_entries" json:"team_impact_entries"`
	PersonalImpactEntries   int64       `db:"personal_impact_entries" json:"personal_impact_entries"`
	DevelopmentEntries      int64       `db:"development_entries" json:"development_entries"`
	MeetingEntries          int64       `db:"meeting_entries" json:"meeting_entries"`
	ReviewEntries           int64       `db:"review_entries" json:"review_entries"`
	DebuggingEntries        int64       `db:"debugging_entries" json:"debugging_entries"`
	ActivitySpanDays        int32       `db:"activity_span_days" json:"activity_span_days"`
	RecentEntries30d        int64       `db:"recent_entries_30d" json:"recent_entries_30d"`
	RecentMinutes30d        int64       `db:"recent_minutes_30d" json:"recent_minutes_30d"`
	RefreshedAt             interface{} `db:"refreshed_at" json:"refreshed_at"`
}

type UserSession struct {
	ID               uuid.UUID          `db:"id" json:"id"`
	UserID           uuid.UUID          `db:"user_id" json:"user_id"`
	SessionTokenHash string             `db:"session_token_hash" json:"session_token_hash"`
	RefreshTokenHash string             `db:"refresh_token_hash" json:"refresh_token_hash"`
	ExpiresAt        pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
	LastActivity     pgtype.Timestamptz `db:"last_activity" json:"last_activity"`
	IpAddress        *netip.Addr        `db:"ip_address" json:"ip_address"`
	UserAgent        pgtype.Text        `db:"user_agent" json:"user_agent"`
	IsActive         pgtype.Bool        `db:"is_active" json:"is_active"`
	CreatedAt        pgtype.Timestamptz `db:"created_at" json:"created_at"`
}
