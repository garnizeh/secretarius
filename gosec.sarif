{
	"runs": [
		{
			"results": [
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/worker/client.go"
								},
								"region": {
									"endColumn": 19,
									"endLine": 797,
									"snippet": {
										"text": "maxTasks := int32(c.config.Worker.MaxConcurrentTasks)"
									},
									"sourceLanguage": "go",
									"startColumn": 19,
									"startLine": 797
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e int32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/services/tag.go"
								},
								"region": {
									"endColumn": 11,
									"endLine": 216,
									"snippet": {
										"text": "if int32(actualLimit) \u003e limit {"
									},
									"sourceLanguage": "go",
									"startColumn": 11,
									"startLine": 216
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e int32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/handlers/tags.go"
								},
								"region": {
									"endColumn": 17,
									"endLine": 146,
									"snippet": {
										"text": "limit = int32(l)"
									},
									"sourceLanguage": "go",
									"startColumn": 17,
									"startLine": 146
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e int32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/handlers/tags.go"
								},
								"region": {
									"endColumn": 17,
									"endLine": 114,
									"snippet": {
										"text": "limit = int32(l)"
									},
									"sourceLanguage": "go",
									"startColumn": 17,
									"startLine": 114
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e int32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/handlers/tags.go"
								},
								"region": {
									"endColumn": 17,
									"endLine": 82,
									"snippet": {
										"text": "limit = int32(l)"
									},
									"sourceLanguage": "go",
									"startColumn": 17,
									"startLine": 82
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e int32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/grpc/server.go"
								},
								"region": {
									"endColumn": 23,
									"endLine": 402,
									"snippet": {
										"text": "ActiveWorkers: int32(activeWorkers),"
									},
									"sourceLanguage": "go",
									"startColumn": 23,
									"startLine": 402
								}
							}
						}
					],
					"message": {
						"text": "integer overflow conversion int -\u003e int32"
					},
					"ruleId": "G115"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/worker/retry.go"
								},
								"region": {
									"endColumn": 32,
									"endLine": 76,
									"snippet": {
										"text": "jitter := delay * 0.1 * (2.0*rand.Float64() - 1.0)"
									},
									"sourceLanguage": "go",
									"startColumn": 32,
									"startLine": 76
								}
							}
						}
					],
					"message": {
						"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)"
					},
					"ruleId": "G404"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/store/users.sql.go"
								},
								"region": {
									"endColumn": 7,
									"endLine": 183,
									"snippet": {
										"text": "const updateUserPassword = `-- name: UpdateUserPassword :exec\nUPDATE users\nSET password_hash = $2, updated_at = NOW()\nWHERE id = $1\n`\n"
									},
									"sourceLanguage": "go",
									"startColumn": 7,
									"startLine": 179
								}
							}
						}
					],
					"message": {
						"text": "Potential hardcoded credentials"
					},
					"ruleId": "G101"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/store/auth.sql.go"
								},
								"region": {
									"endColumn": 7,
									"endLine": 345,
									"snippet": {
										"text": "const isRefreshTokenDenylisted = `-- name: IsRefreshTokenDenylisted :one\nSELECT EXISTS(\nSELECT 1 FROM refresh_token_denylist\nWHERE jti = $1\n)\n`\n"
									},
									"sourceLanguage": "go",
									"startColumn": 7,
									"startLine": 340
								}
							}
						}
					],
					"message": {
						"text": "Potential hardcoded credentials"
					},
					"ruleId": "G101"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/store/auth.sql.go"
								},
								"region": {
									"endColumn": 7,
									"endLine": 320,
									"snippet": {
										"text": "const getUserSessionByToken = `-- name: GetUserSessionByToken :one\nSELECT id, user_id, session_token_hash, refresh_token_hash, expires_at, last_activity, ip_address, user_agent, is_active, created_at FROM user_sessions\nWHERE session_token_hash = $1 AND is_active = true\n`\n"
									},
									"sourceLanguage": "go",
									"startColumn": 7,
									"startLine": 317
								}
							}
						}
					],
					"message": {
						"text": "Potential hardcoded credentials"
					},
					"ruleId": "G101"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/store/auth.sql.go"
								},
								"region": {
									"endColumn": 7,
									"endLine": 183,
									"snippet": {
										"text": "const getDenylistedTokensByUser = `-- name: GetDenylistedTokensByUser :many\nSELECT jti, user_id, expires_at, denylisted_at, reason FROM refresh_token_denylist\nWHERE user_id = $1\nORDER BY denylisted_at DESC\n`\n"
									},
									"sourceLanguage": "go",
									"startColumn": 7,
									"startLine": 179
								}
							}
						}
					],
					"message": {
						"text": "Potential hardcoded credentials"
					},
					"ruleId": "G101"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/store/auth.sql.go"
								},
								"region": {
									"endColumn": 7,
									"endLine": 56,
									"snippet": {
										"text": "const createRefreshTokenDenylist = `-- name: CreateRefreshTokenDenylist :exec\n\nINSERT INTO refresh_token_denylist (jti, user_id, expires_at, reason)\nVALUES ($1, $2, $3, COALESCE($4, 'logout'))\n`\n"
									},
									"sourceLanguage": "go",
									"startColumn": 7,
									"startLine": 52
								}
							}
						}
					],
					"message": {
						"text": "Potential hardcoded credentials"
					},
					"ruleId": "G101"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/store/auth.sql.go"
								},
								"region": {
									"endColumn": 7,
									"endLine": 35,
									"snippet": {
										"text": "const cleanupExpiredDenylistedTokens = `-- name: CleanupExpiredDenylistedTokens :exec\nDELETE FROM refresh_token_denylist\nWHERE expires_at \u003c NOW() - INTERVAL '7 days'\n`\n"
									},
									"sourceLanguage": "go",
									"startColumn": 7,
									"startLine": 32
								}
							}
						}
					],
					"message": {
						"text": "Potential hardcoded credentials"
					},
					"ruleId": "G101"
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/handlers/tags.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 146,
									"snippet": {
										"text": "limit = int32(l)"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 146
								}
							}
						}
					],
					"message": {
						"text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32"
					},
					"ruleId": "G109",
					"ruleIndex": 1
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/handlers/tags.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 114,
									"snippet": {
										"text": "limit = int32(l)"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 114
								}
							}
						}
					],
					"message": {
						"text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32"
					},
					"ruleId": "G109",
					"ruleIndex": 1
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/handlers/tags.go"
								},
								"region": {
									"endColumn": 12,
									"endLine": 82,
									"snippet": {
										"text": "limit = int32(l)"
									},
									"sourceLanguage": "go",
									"startColumn": 12,
									"startLine": 82
								}
							}
						}
					],
					"message": {
						"text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32"
					},
					"ruleId": "G109",
					"ruleIndex": 1
				},
				{
					"level": "error",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "cmd/worker/main.go"
								},
								"region": {
									"endColumn": 17,
									"endLine": 95,
									"snippet": {
										"text": "httpServer := \u0026http.Server{\nAddr:    fmt.Sprintf(\":%d\", cfg.Worker.HealthPort),\nHandler: http.DefaultServeMux,\n}\n"
									},
									"sourceLanguage": "go",
									"startColumn": 17,
									"startLine": 92
								}
							}
						}
					],
					"message": {
						"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
					},
					"ruleId": "G112",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "proto/worker/worker.pb.go"
								},
								"region": {
									"endColumn": 32,
									"endLine": 1627,
									"snippet": {
										"text": "RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_worker_proto_rawDesc), len(file_proto_worker_proto_rawDesc)),"
									},
									"sourceLanguage": "go",
									"startColumn": 32,
									"startLine": 1627
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "proto/worker/worker.pb.go"
								},
								"region": {
									"endColumn": 19,
									"endLine": 1627,
									"snippet": {
										"text": "RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_worker_proto_rawDesc), len(file_proto_worker_proto_rawDesc)),"
									},
									"sourceLanguage": "go",
									"startColumn": 19,
									"startLine": 1627
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "proto/worker/worker.pb.go"
								},
								"region": {
									"endColumn": 66,
									"endLine": 1543,
									"snippet": {
										"text": "file_proto_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_worker_proto_rawDesc), len(file_proto_worker_proto_rawDesc)))"
									},
									"sourceLanguage": "go",
									"startColumn": 66,
									"startLine": 1543
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "proto/worker/worker.pb.go"
								},
								"region": {
									"endColumn": 79,
									"endLine": 1543,
									"snippet": {
										"text": "file_proto_worker_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_worker_proto_rawDesc), len(file_proto_worker_proto_rawDesc)))"
									},
									"sourceLanguage": "go",
									"startColumn": 79,
									"startLine": 1543
								}
							}
						}
					],
					"message": {
						"text": "Use of unsafe calls should be audited"
					},
					"ruleId": "G103",
					"ruleIndex": 1
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/worker/connection.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 191,
									"snippet": {
										"text": "cm.conn.Close()"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 191
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/worker/connection.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 181,
									"snippet": {
										"text": "conn.Close()"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 181
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "internal/worker/connection.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 168,
									"snippet": {
										"text": "conn.Close()"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 168
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "cmd/worker/main.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 165,
									"snippet": {
										"text": "w.Write([]byte(\"NOT_READY\"))"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 165
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "cmd/worker/main.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 162,
									"snippet": {
										"text": "w.Write([]byte(\"READY\"))"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 162
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "cmd/worker/main.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 155,
									"snippet": {
										"text": "w.Write([]byte(\"UNHEALTHY\"))"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 155
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "cmd/worker/main.go"
								},
								"region": {
									"endColumn": 4,
									"endLine": 152,
									"snippet": {
										"text": "w.Write([]byte(\"OK\"))"
									},
									"sourceLanguage": "go",
									"startColumn": 4,
									"startLine": 152
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				},
				{
					"level": "warning",
					"locations": [
						{
							"physicalLocation": {
								"artifactLocation": {
									"uri": "cmd/worker/main.go"
								},
								"region": {
									"endColumn": 3,
									"endLine": 83,
									"snippet": {
										"text": "connectionManager.Close()"
									},
									"sourceLanguage": "go",
									"startColumn": 3,
									"startLine": 83
								}
							}
						}
					],
					"message": {
						"text": "Errors unhandled"
					},
					"ruleId": "G104",
					"ruleIndex": 2
				}
			],
			"taxonomies": [
				{
					"downloadUri": "https://cwe.mitre.org/data/xml/cwec_v4.4.xml.zip",
					"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
					"informationUri": "https://cwe.mitre.org/data/published/cwe_v4.4.pdf/",
					"isComprehensive": true,
					"language": "en",
					"minimumRequiredLocalizedDataSemanticVersion": "4.4",
					"name": "CWE",
					"organization": "MITRE",
					"releaseDateUtc": "2021-03-15",
					"shortDescription": {
						"text": "The MITRE Common Weakness Enumeration"
					},
					"taxa": [
						{
							"fullDescription": {
								"text": "The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control."
							},
							"guid": "c71e4fa0-720e-3e82-8b67-b2d44d0c604b",
							"helpUri": "https://cwe.mitre.org/data/definitions/190.html",
							"id": "190",
							"shortDescription": {
								"text": "Integer Overflow or Wraparound"
							}
						},
						{
							"fullDescription": {
								"text": "The program calls a function that can never be guaranteed to work safely."
							},
							"guid": "b5fcdc26-1906-39a8-aa7f-04cbe2339bce",
							"helpUri": "https://cwe.mitre.org/data/definitions/242.html",
							"id": "242",
							"shortDescription": {
								"text": "Use of Inherently Dangerous Function"
							}
						},
						{
							"fullDescription": {
								"text": "The product uses a Pseudo-Random Number Generator (PRNG) in a security context, but the PRNG's algorithm is not cryptographically strong."
							},
							"guid": "0512047f-75a2-3ac3-bb28-97df3a80efbe",
							"helpUri": "https://cwe.mitre.org/data/definitions/338.html",
							"id": "338",
							"shortDescription": {
								"text": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)"
							}
						},
						{
							"fullDescription": {
								"text": "The software does not properly control the allocation and maintenance of a limited resource, thereby enabling an actor to influence the amount of resources consumed, eventually leading to the exhaustion of available resources."
							},
							"guid": "5d980950-93cd-3caf-9057-858ec3c28877",
							"helpUri": "https://cwe.mitre.org/data/definitions/400.html",
							"id": "400",
							"shortDescription": {
								"text": "Uncontrolled Resource Consumption"
							}
						},
						{
							"fullDescription": {
								"text": "The software does not properly anticipate or handle exceptional conditions that rarely occur during normal operation of the software."
							},
							"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
							"helpUri": "https://cwe.mitre.org/data/definitions/703.html",
							"id": "703",
							"shortDescription": {
								"text": "Improper Check or Handling of Exceptional Conditions"
							}
						},
						{
							"fullDescription": {
								"text": "The software contains hard-coded credentials, such as a password or cryptographic key, which it uses for its own inbound authentication, outbound communication to external components, or encryption of internal data."
							},
							"guid": "93d834a1-2cc5-38db-837f-66dfc7d711cc",
							"helpUri": "https://cwe.mitre.org/data/definitions/798.html",
							"id": "798",
							"shortDescription": {
								"text": "Use of Hard-coded Credentials"
							}
						}
					],
					"version": "4.4"
				}
			],
			"tool": {
				"driver": {
					"guid": "8b518d5f-906d-39f9-894b-d327b1a421c5",
					"informationUri": "https://github.com/securego/gosec/",
					"name": "gosec",
					"rules": [
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Potential hardcoded credentials"
							},
							"help": {
								"text": "Potential hardcoded credentials\nSeverity: HIGH\nConfidence: LOW\n"
							},
							"id": "G101",
							"name": "Use of Hard-coded Credentials",
							"properties": {
								"precision": "low",
								"tags": [
									"security",
									"HIGH"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "93d834a1-2cc5-38db-837f-66dfc7d711cc",
										"id": "798",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Potential hardcoded credentials"
							}
						},
						{
							"defaultConfiguration": {
								"level": "warning"
							},
							"fullDescription": {
								"text": "Use of unsafe calls should be audited"
							},
							"help": {
								"text": "Use of unsafe calls should be audited\nSeverity: LOW\nConfidence: HIGH\n"
							},
							"id": "G103",
							"name": "Use of Inherently Dangerous Function",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"LOW"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "b5fcdc26-1906-39a8-aa7f-04cbe2339bce",
										"id": "242",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Use of unsafe calls should be audited"
							}
						},
						{
							"defaultConfiguration": {
								"level": "warning"
							},
							"fullDescription": {
								"text": "Errors unhandled"
							},
							"help": {
								"text": "Errors unhandled\nSeverity: LOW\nConfidence: HIGH\n"
							},
							"id": "G104",
							"name": "Improper Check or Handling of Exceptional Conditions",
							"properties": {
								"precision": "high",
								"tags": [
									"security",
									"LOW"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "7df38d1d-038e-3ced-8601-8d9265b90a25",
										"id": "703",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Errors unhandled"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32"
							},
							"help": {
								"text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32\nSeverity: HIGH\nConfidence: MEDIUM\n"
							},
							"id": "G109",
							"name": "Integer Overflow or Wraparound",
							"properties": {
								"precision": "medium",
								"tags": [
									"security",
									"HIGH"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "c71e4fa0-720e-3e82-8b67-b2d44d0c604b",
										"id": "190",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Potential Integer overflow made by strconv.Atoi result conversion to int16/32"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
							},
							"help": {
								"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server\nSeverity: MEDIUM\nConfidence: LOW\n"
							},
							"id": "G112",
							"name": "Uncontrolled Resource Consumption",
							"properties": {
								"precision": "low",
								"tags": [
									"security",
									"MEDIUM"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "5d980950-93cd-3caf-9057-858ec3c28877",
										"id": "400",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Potential Slowloris Attack because ReadHeaderTimeout is not configured in the http.Server"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)"
							},
							"help": {
								"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)\nSeverity: HIGH\nConfidence: MEDIUM\n"
							},
							"id": "G404",
							"name": "Use of Cryptographically Weak Pseudo-Random Number Generator (PRNG)",
							"properties": {
								"precision": "medium",
								"tags": [
									"security",
									"HIGH"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "0512047f-75a2-3ac3-bb28-97df3a80efbe",
										"id": "338",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "Use of weak random number generator (math/rand or math/rand/v2 instead of crypto/rand)"
							}
						},
						{
							"defaultConfiguration": {
								"level": "error"
							},
							"fullDescription": {
								"text": "integer overflow conversion int -\u003e int32"
							},
							"help": {
								"text": "integer overflow conversion int -\u003e int32\nSeverity: HIGH\nConfidence: MEDIUM\n"
							},
							"id": "G115",
							"name": "Integer Overflow or Wraparound",
							"properties": {
								"precision": "medium",
								"tags": [
									"security",
									"HIGH"
								]
							},
							"relationships": [
								{
									"kinds": [
										"superset"
									],
									"target": {
										"guid": "c71e4fa0-720e-3e82-8b67-b2d44d0c604b",
										"id": "190",
										"toolComponent": {
											"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
											"name": "CWE"
										}
									}
								}
							],
							"shortDescription": {
								"text": "integer overflow conversion int -\u003e int32"
							}
						}
					],
					"semanticVersion": "dev",
					"supportedTaxonomies": [
						{
							"guid": "f2856fc0-85b7-373f-83e7-6f8582243547",
							"name": "CWE"
						}
					],
					"version": "dev"
				}
			}
		}
	],
	"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/main/sarif-2.1/schema/sarif-schema-2.1.0.json",
	"version": "2.1.0"
}